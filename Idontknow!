local HttpService = game:GetService("HttpService")

local userKey = script_key -- Set by the loader script
local serverEndpoint = "https://d21a-2601-647-6512-1bd7-65e8-985-974a-faa2.ngrok-free.app"
local realScriptURL = "https://raw.githubusercontent.com/Estplugs/test/refs/heads/main/lua"

local userHWID = "NO_HWID_FUNCTION"
if gethwid then
    userHWID = gethwid()
end

local executorName = "UnknownExecutor"
if identifyexecutor then
    executorName = identifyexecutor() or "UnknownExecutor"
end

local placeId = game.PlaceId
local jobId = game.JobId or "UnknownJobId"
local placeName = "UnknownPlace"
pcall(function()
    local info = game:GetService("MarketplaceService"):GetProductInfo(placeId)
    placeName = info.Name or "UnknownPlace"
end)

-- Validation URL
local validateUrl = string.format("%s/validate_key?key=%s&hwid=%s", serverEndpoint, userKey, userHWID)

local success, response = pcall(function()
    return http.request({
        Url = validateUrl,
        Method = "GET"
    })
end)

if not success or not response then
    game.Players.LocalPlayer:Kick("Whitelist check failed: No response from the server.")
    return
end

if response.StatusCode ~= 200 then
    game.Players.LocalPlayer:Kick("Whitelist check failed: "..(response.Body or "Unknown error"))
    return
end

local data
local decodeOK, decodeErr = pcall(function()
    data = HttpService:JSONDecode(response.Body)
end)

if not decodeOK then
    game.Players.LocalPlayer:Kick("Whitelist check failed: "..(decodeErr or "Invalid JSON"))
    return
end

if not data.valid then
    game.Players.LocalPlayer:Kick("Whitelist check failed: "..(data.reason or "Unauthorized access"))
    return
end

-- Log Execution
local logData = {
    hwid = userHWID,
    executor = executorName,
    key = userKey,
    discord_id = data.discord_id or "Unknown",
    execution_count = data.execution_count or 0,
    job_id = jobId,
    place_id = placeId,
    place_name = placeName
}

local logUrl = serverEndpoint .. "/log_execution"
local logSuccess, logError = pcall(function()
    http.request({
        Url = logUrl,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(logData)
    })
end)

if not logSuccess then
    game.Players.LocalPlayer:Kick("Failed to log execution: "..tostring(logError))
end

-- Load the real script
local scriptSuccess, scriptError = pcall(function()
    loadstring(game:HttpGet(realScriptURL))()
end)

if not scriptSuccess then
    game.Players.LocalPlayer:Kick("Failed to load main script: "..tostring(scriptError))
end
